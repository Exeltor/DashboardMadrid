head
  meta(charset='utf-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  meta(name='viewport' content='width=device-width, initial-scale=1')
  // ===============================================
  // Document Title
  // ===============================================
  title Dashboard
  // ===============================================
  // Favicons
  // ===============================================
  link(rel='apple-touch-icon' sizes='180x180' href='assets/img/logos/madrid-logo-transparent.png')
  link(rel='shortcut icon' type='image/x-icon' href='assets/img/logos/madrid-logo-transparent.png')
  link(rel='manifest' href='assets/img/favicons/manifest.json')
  meta(name='msapplication-TileImage' content='assets/img/favicons/mstile-150x150.png')
  meta(name='theme-color' content='#ffffff')
  // ===============================================
  // Estilos de la plantilla
  // ===============================================
  link(href='https://fonts.googleapis.com/css?family=Open+Sans:300,400,500,600,700%7cPoppins:100,200,300,400,500,600,700,800,900' rel='stylesheet')
  link(href='assets/lib/jqvmap/jqvmap.min.css' rel='stylesheet')
  link(href='assets/css/theme.css' rel='stylesheet')
  link(href='//cdn.datatables.net/responsive/2.2.3/css/responsive.bootstrap4.min.css', rel='stylesheet')
  link(href='assets/css/dataTables.bootstrap4.min.css', rel='stylesheet')
  link(href='//cdn.datatables.net/fixedheader/3.1.2/css/fixedHeader.dataTables.min.css', rel='stylesheet')
  link(href='https://use.fontawesome.com/releases/v5.8.2/css/solid.css', rel='stylesheet')
// ===============================================
// Contenido
// ===============================================
main#top.main
  // añadir -fluid a container para pantalla completa
  .container-fluid
    nav.navbar.navbar-vertical.navbar-expand-lg.navbar-light.navbar-glass
      a.navbar-brand.text-left(href='/')
        .d-flex.align-items-center.text-primary.py-3
          .d-inline-flex.flex-center
            div.d-none.d-sm-none.d-md-block
              img.mr-2(src='assets/img/logos/madrid-logo-transparent.png' alt='' width='60')
            span.text-info Madrid
      // ===============================================
      // Menu lateral
      // ===============================================
      #navbarVerticalCollapse.collapse.navbar-collapse
        ul.navbar-nav.flex-column
          li.nav-item.active
            a.nav-link(href='/')
              span.nav-link-icon
                span.fas.fa-chart-line
              span  Dashboard
              span.badge.badge-soft-success.badge-pill.ml-2 Selected
          li.nav-item
            a.nav-link.dropdown-indicator(href='#email' data-toggle='collapse' role='button' aria-expanded='false' aria-controls='email')
              .d-flex.align-items-center
                span.nav-link-icon
                  span.fas.fa-exchange-alt
                span Servicios
            // ===============================================
            // Servicios
            // ===============================================
            ul#email.nav(data-parent='#navbarVerticalCollapse')
              li.nav-item
                a.nav-link(href='servicios/metro-cercanias') Metro/Cercanias
              li.nav-item
                a.nav-link(href='servicios/autobus') Autobus
              li.nav-item
                a.nav-link(href='servicios/bicimad') BiciMad
              li.nav-item
                a.nav-link(href='servicios/vuelos') Vuelos
              li.nav-item
                a.nav-link(href='servicios/uber') Uber
    .content
      nav.navbar.navbar-light.navbar-glass.fs--1.font-weight-semi-bold.row.navbar-top.sticky-kit.navbar-expand
        button.navbar-toggler.collapsed(type='button' data-toggle='collapse' data-target='#navbarVerticalCollapse' aria-controls='navbarVerticalCollapse' aria-expanded='false' aria-label='Toggle navigation')
          span.navbar-toggler-icon
        a.navbar-brand.text-left.ml-3(href='/')
          .d-flex.align-items-center.text-primary
            .d-inline-flex.flex-center
              div.d-none.d-sm-none.d-md-block
                img.mr-2(src='assets/img/logos/madrid-logo-transparent.png' alt='' width='50')
              span.text-info Madrid
        // ===============================================
        // inicio
        // ===============================================
        #navbarNavDropdown1.collapse.navbar-collapse.py-3
          .d-flex.align-items-center.text-primary
            ul.navbar-nav.align-items-center.d-none.d-lg-block
              li.nav-item
                // ===============================================
                // Fecha formato pc
                // ===============================================
                h5
                  script(type='text/javascript').
                    function makeArray() {
                    for (i = 0; i<makeArray.arguments.length; i++)
                    this[i + 1] = makeArray.arguments[i];}
                    var months = new makeArray('Enero','Febrero','Marzo','Abril','Mayo',
                    'Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre');
                    function madeArray() {
                    for (i = 0; i<madeArray.arguments.length; i++)
                    this[i + 1] = madeArray.arguments[i];}
                    var weekday = new Array(7);
                    weekday[0] =  "Domingo";
                    weekday[1] = "Lunes";
                    weekday[2] = "Martes";
                    weekday[3] = "Miércoles";
                    weekday[4] = "Jueves";
                    weekday[5] = "Viernes";
                    weekday[6] = "Sábado";
                    var date = new Date();
                    var day = date.getDate();
                    var month = date.getMonth() + 1;
                    var days = date.getDay();
                    var yy = date.getYear();
                    var year = (yy < 1000) ? yy + 1900 : yy;
                    document.write( weekday[days] + ", " + day + " de " + months[month] + " de " + year);
          // ===============================================
          // Fecha formato movil
          // ===============================================
          .mostrarmovil
            ul.navbar-nav.align-items-center.ml-auto.visible-xs
              li.nav-item.dropdown
                script(type='text/javascript').
                  var date = new Date();
                  var d  = date.getDate();
                  var day = (d < 10) ? '0' + d : d;
                  var m = date.getMonth() + 1;
                  var month = (m < 10) ? '0' + m : m;
                  var yy = date.getYear();
                  var year = (yy < 1000) ? yy + 1900 : yy;
                  document.write(day + "/" + month + "/" + year);
          // ===============================================
          // Reloj
          // ===============================================
          ul.navbar-nav.align-items-center.ml-auto
            li.nav-item.dropdown
              h5
                script(type='text/javascript').
                  function startTime(){
                  today=new Date();
                  h=today.getHours();
                  m=today.getMinutes();
                  s=today.getSeconds();
                  m=checkTime(m);
                  s=checkTime(s);
                  document.getElementById('reloj').innerHTML=h+":"+m+":"+s;
                  t=setTimeout('startTime()',500);}
                  function checkTime(i)
                  {if (i<10) {i="0" + i;}return i;}
                  window.onload=function(){startTime();}
                #reloj(style='font-size:20px;')
      // ===============================================
      // Contenido de página
      // ===============================================
      div
        // Grid principal(Primera fila aeropuerto y tiempo)

        //Mixins
        mixin aeropuertoDashCard
          .card.text-center(class='card text-center' style='max-height:18rem')
            .card-body.col-xs-12(style='overflow-x:hidden')
              .fancy-tab 
                .nav-bar.nav-bar-center
                  .nav-bar-item.px-3.px-sm-4.active
                    span.fas.fa-plane-departure
                    .mt-1 Salidas
                  .nav-bar-item.px-3.px-sm-4
                    span.fas.fa-plane-arrival
                    .mt-1 Llegadas
                .tab-contents(style='overflow-y:hidden;overflow-x:hidden')
                  .tab-content.active
                    table.table.table-lg.table-dashboard.data-table.display(data-searching='false', data-paging='false',
                      data-info='false', style='width:100%;height:100%')
                      thead.bg-200
                        tr
                          th(scope='col') Aerolinea
                          th(scope='col') Destino
                          th(scope='col') Estado
                          th(scope='col') Terminal
                          th(scope='col') Hora
                          th(scope='col') ID
                      tbody.bg-white
                        each flight in flightDepJsons
                          if flight.estado == 'Cancelado'
                            tr.table-danger
                              th(scope='row')
                                img(src="assets/img/logos/logosAerolineas/" + flight.FS + ".png")
                              td= flight.destino
                              td= flight.estado
                              td= flight.terminal
                              td= flight.horaSalida
                              td= flight.id
                          else if flight.estado == 'Desconocido'
                            tr.table-warning
                              th(scope='row')
                                img(src="assets/img/logos/logosAerolineas/" + flight.FS + ".png")
                              td= flight.destino
                              td= flight.estado
                              td= flight.terminal
                              td= flight.horaSalida
                              td= flight.id
                          else if flight.estado == 'Programado'
                            tr.table-primary
                              th(scope='row')
                                img(src="assets/img/logos/logosAerolineas/" + flight.FS + ".png")
                              td= flight.destino
                              td= flight.estado
                              td= flight.terminal
                              td= flight.horaSalida
                              td= flight.id
                          else
                            tr
                              th(scope='row')
                                img(src="assets/img/logos/logosAerolineas/" + flight.FS + ".png")
                              td= flight.destino
                              td= flight.estado
                              td= flight.terminal
                              td= flight.horaSalida
                              td= flight.id    
                  .tab-content
                    table.table.table-lg.table-dashboard.data-table.responsive.display(data-searching='false', data-paging='false',
                      data-info='false', style='width:100%;height:100%')
                      thead.bg-200
                        tr
                          th(scope='col') Aerolinea
                          th(scope='col') Origen
                          th(scope='col') Estado
                          th(scope='col') Terminal
                          th(scope='col') Hora
                          th(scope='col') ID
                      tbody.bg-white
                        each flight in flightArrJsons
                          if flight.estado == 'Activo'
                            tr.table-primary
                              th(scope='row')
                                img(src="assets/img/logos/logosAerolineas/" + flight.FS + ".png")
                              td= flight.origen
                              td= flight.estado
                              td= flight.terminal
                              td= flight.horaLlegada
                              td= flight.id
                          else if flight.estado == 'Cancelado'
                            tr.table-danger
                              th(scope='row')
                                img(src="assets/img/logos/logosAerolineas/" + flight.FS + ".png")
                              td= flight.origen
                              td= flight.estado
                              td= flight.terminal
                              td= flight.horaLlegada
                              td= flight.id
                          else
                            tr
                              th(scope='row')
                                img(src="assets/img/logos/logosAerolineas/" + flight.FS + ".png")
                              td= flight.origen
                              td= flight.estado
                              td= flight.terminal
                              td= flight.horaLlegada
                              td= flight.id

        mixin tiempoDashCard
          .card.py-3
            .card-body
              div(style='float:left')
                img.pr-3(src= weatherIcon, height='150', width='150')
              div
                h6.card-title(style='font-size:350%;vertical-align:right')= weatherTemp + 'º'
                h5.card-title(style='vertical-align:middle')= weatherDesc

            

        mixin conversorMonedaDashCard
          .card.py-3
            .card-body
              h5.card-title Conversor de Moneda
              form(action='/convert', method='POST')
                .input-group.mb-3
                  .input-group-prepend
                    button.btn.btn-outline-primary.dropdown-toggle.shadow-none(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false') Origen
                    .dropdown-menu(style='max-height:10rem;overflow-y:auto')
                      for coinType in coinTypes
                        a.dropdown-item(id= coinType, onClick='dropdownCurrencySelector(this.id)', style='cursor:pointer')= coinType
                      
                  input.form-control(type='number', aria-label='Cantidad', id='conversionQuantity')
                  .input-group-append
                    span.input-group-text(id='currencyTypeText')
              
                .input-group.mb-3
                  input.form-control(id='readonlyCurrency', type='number', placeholder='Resultado', readonly='')
                  .input-group-append
                    span.input-group-text €
                
                center
                  button.btn.btn-falcon-success.mb-3(type='button', onClick='convertToEur()') Convertir
          
        mixin metroDashCard
          .card
            center
              h2.pt-2 Metro de Madrid
            .card-body 
              .container-fluid
                .row
                  .col-xs-.col-lg-3.col-md-6.col-sm-6
                    table.table-borderless
                      thead
                        tr
                          th.py-3(scope='col', width = '10%') Linea
                        
                      tbody
                        each line, index in metroLines
                          if index < 4
                            tr
                              td.py-3
                                if index < 4
                                  img(src=line.img, style='width:30px')
                              td.py-3(align='left')
                                if index < 4
                                  - var color = ''
                                  if line.desc == 'No hay incidencias'
                                    span.badge.bagge-pill.badge-success(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id)= line.estado
                                    - color = 'background-color:#228B22';
                                  else if line.estado == 'Circulación interrumpida' || line.estado == 'circulación interrumpida'
                                    span.badge.bagge-pill.badge-danger(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id) Circul. interrumpida
                                    - color = 'background-color:#B22222'
                                  else
                                    span.badge.bagge-pill.badge-warning(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id)= line.estado
                                    - color = 'background-color:#FF8C00'

                                .modal.fade(id='infoModal' + line._id, tabindex='-1', role='dialog', aria-labelledby='infoModalLabel', aria-hidden='true')
                                  .modal-dialog.modal-dialog-centered(role='document')
                                    .modal-content(style=color)
                                      .modal-header
                                        h5.modal-title(id='infoModalLabel', style='color:white') Informacion sobre estado
                                        button.close(type='button', data-dismiss='modal', aria-label='close')
                                            span.font-weight-light(aria-hidden='true') &times;
                                      .modal-body(style='white-space:pre-line;color:white')= line.desc
                  .col-xs-.col-lg-3.col-md-6.col-sm-6
                    table.table-borderless
                      thead
                        tr
                          th.py-3(scope='col', width='10%') Linea
                        
                      tbody
                        each line, index in metroLines
                          if index >= 4 && index < 8
                            tr
                              td.py-3
                                if index >= 4 && index < 8
                                  img(src=line.img, style='width:30px')
                              td.py-3(align='left')
                                if index >= 4 && index < 8
                                  - var color = ''
                                  if line.desc == 'No hay incidencias'
                                    span.badge.bagge-pill.badge-success(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id)= line.estado
                                    - color = 'background-color:#228B22';
                                  else if line.estado == 'Circulación interrumpida' || line.estado == 'circulación interrumpida'
                                    span.badge.bagge-pill.badge-danger(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id) Circul. interrumpida
                                    - color = 'background-color:#B22222'
                                  else
                                    span.badge.bagge-pill.badge-warning(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id)= line.estado
                                    - color = 'background-color:#FF8C00'
                                .modal.fade(id='infoModal' + line._id, tabindex='-1', role='dialog', aria-labelledby='infoModalLabel', aria-hidden='true')
                                  .modal-dialog.modal-dialog-centered(role='document')
                                    .modal-content(style=color)
                                      .modal-header
                                        h5.modal-title(id='infoModalLabel', style='color:white') Informacion sobre estado
                                        button.close(type='button', data-dismiss='modal', aria-label='close')
                                            span.font-weight-light(aria-hidden='true') &times;
                                      .modal-body(style='white-space:pre-line;color:white')= line.desc
                  .col-xs-.col-lg-3.col-md-6.col-sm-6
                    table.table-borderless
                      thead
                        tr
                          th.py-3(scope='col', width='10%') Linea
                        
                      tbody
                        each line, index in metroLines
                          if index >= 8 && index < 12
                            tr
                              td.py-3
                                if index >= 8 && index < 12
                                  img(src=line.img, style='width:30px')
                              td.py-3(align='left')
                                if index >= 8 && index < 12
                                - var color = ''
                                  if line.desc == 'No hay incidencias'
                                    span.badge.bagge-pill.badge-success(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id)= line.estado
                                    - color = 'background-color:#228B22';
                                  else if line.estado == 'Circulación interrumpida' || line.estado == 'circulación interrumpida'
                                    span.badge.bagge-pill.badge-danger(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id) Circul. interrumpida
                                    - color = 'background-color:#B22222'
                                  else
                                    span.badge.bagge-pill.badge-warning(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id)= line.estado
                                    - color = 'background-color:#FF8C00'

                                .modal.fade(id='infoModal' + line._id, tabindex='-1', role='dialog', aria-labelledby='infoModalLabel', aria-hidden='true')
                                  .modal-dialog.modal-dialog-centered(role='document')
                                    .modal-content(style=color)
                                      .modal-header
                                        h5.modal-title(id='infoModalLabel', style='color:white') Informacion sobre estado
                                        button.close(type='button', data-dismiss='modal', aria-label='close')
                                            span.font-weight-light(aria-hidden='true') &times;
                                      .modal-body(style='white-space:pre-line;color:white')= line.desc
                  .col-xs-.col-lg-3.col-md-6.col-sm-6
                    table.table-borderless
                      thead
                        tr
                          th.py-3(scope='col', width='10%') Linea
                        
                      tbody
                        each line, index in metroLines
                          if index >=12 && index< 16
                            tr
                              td.py-3
                                if index >=12 && index< 16
                                  img(src=line.img, style='width:30px')
                              td.py-3(align='left')
                                if index >=12 && index< 16
                                - var color = ''
                                  if line.desc == 'No hay incidencias'
                                    span.badge.bagge-pill.badge-success(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id)= line.estado
                                    - color = 'background-color:#228B22';
                                  else if line.estado == 'Circulación interrumpida' || line.estado == 'circulación interrumpida'
                                    span.badge.bagge-pill.badge-danger(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id) Circul. interrumpida
                                    - color = 'background-color:#B22222'
                                  else
                                    span.badge.bagge-pill.badge-warning(style='cursor:pointer;display:block',data-toggle='modal', data-target='#infoModal' + line._id)= line.estado
                                    - color = 'background-color:#FF8C00'

                                .modal.fade(id='infoModal' + line._id, tabindex='-1', role='dialog', aria-labelledby='infoModalLabel', aria-hidden='true')
                                  .modal-dialog.modal-dialog-centered(role='document')
                                    .modal-content(style=color)
                                      .modal-header
                                        h5.modal-title(id='infoModalLabel', style='color:white') Informacion sobre estado
                                        button.close(type='button', data-dismiss='modal', aria-label='close')
                                            span.font-weight-light(aria-hidden='true') &times;
                                      .modal-body(style='white-space:pre-line;color:white')= line.desc

        mixin googleMapDashCard
          .card.text-center(class='card text-center')
            .card-header
              .fancy-tab 
                .nav-bar.nav-bar-center
                  .nav-bar-item.px-3.px-sm-4
                    span.fas.fa-subway(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                    .dropdown-menu
                      each line in distinctLines
                        if line == 'Línea '
                          a.dropdown-item(id= line, onClick='dropSpecificLine(this.id)', style='cursor:pointer') Ramal
                        else
                          a.dropdown-item(id= line, onClick='dropSpecificLine(this.id)', style='cursor:pointer')= line
                  .nav-bar-item.px-3.px-sm-4
                    span.fas.fa-plane-arrival(data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                    .dropdown-menu
                      each line in ['C-1', 'C-2', 'C-3', 'C-4','C-5', 'C-7','C-8','C-9','C-10']
                        a.dropdown-item(id= line, onClick='dropSpecificCercanias(this.id)', style='cursor:pointer')= line
                  .nav-bar-item.px-3.px-sm-4
                    span.fas.fa-bicycle(onClick='dropBicimad()')
                  .nav-bar-item.px-3.px-sm-4
                    span.fas.fa-traffic-light(onClick='showTraffic()')
                  .nav-bar-item.px-3.px-sm-4.active
                    span.fas.fa-times-circle(onClick='clearMarkers()')
            .card-body
              .map-canvas.min-vh-50(id='map')
                  script(type='text/javascript').
                      var dataMetro = !{JSON.stringify(metroStations)};
                      var dataBicimad = !{JSON.stringify(bicimadStations)};
                      var dataCercanias = !{JSON.stringify(cercaniasStations)};
                      
                      var trafficLayer;
                      var transitLayer;

                      var map;
                      var markers = [];
                      function initMap() {
                        map = new google.maps.Map(document.getElementById('map'), {
                          center: {lat: 40.4165000, lng: -3.7025600},
                          zoom: 11,
                          mapTypeControl: false,
                          streetViewControl: false
                        });

                        trafficLayer = new google.maps.TrafficLayer();
                        transitLayer = new google.maps.TransitLayer();
                      }
                      
                      function dropMetro(){
                        clearMarkers();
                        
                        transitLayer.setMap(map);
                        dataMetro.forEach(function(stat){
                          var marker = new google.maps.Marker({
                            position: new google.maps.LatLng(stat.lat, stat.lon),
                            icon: {
                              url: 'assets/img/icons/metroIcon.png',
                              scaledSize: new google.maps.Size(33,33)
                            },
                            map: map,
                            animation: google.maps.Animation.DROP
                          });
                          markers.push(marker);
                        });
                      }

                      function dropSpecificLine(line){
                        clearMarkers();
                        transitLayer.setMap(map);

                        dataMetro.forEach(function(stat){
                          if(line == stat.linea){
                            var marker = new google.maps.Marker({
                              position: new google.maps.LatLng(stat.lat, stat.lon),
                              icon: {
                                url: 'assets/img/icons/metroIcon.png',
                                scaledSize: new google.maps.Size(33,33)
                              },
                              map: map,
                              animation: google.maps.Animation.DROP
                            });
                            markers.push(marker);
                          }
                        });
                      }

                      function dropCercanias(){
                        clearMarkers();
                        
                        transitLayer.setMap(map);
                        dataCercanias.forEach(function(stat){
                          var contentString = '<center><h5 id="firstHeading" class="firstHeading">' + stat.nombre + '</h5>\n' + 
                            '<h6>Direccion: ' + stat.direccion + '</h6>' + 
                            '</br>' + 
                            '<h6>Lineas</h6>\n' +
                            '<p>' + stat.lineas + '</center></p>' + 
                            '<h6>Tarifa</h6>\n' + 
                            '<p>' + stat.tarifa + '</p>';

                          var infowindow = new google.maps.InfoWindow({
                            content : contentString
                          });

                          var marker = new google.maps.Marker({
                            position: new google.maps.LatLng(stat.lat, stat.lon),
                            icon: {
                              url: 'http://www.comunidad.madrid/sites/default/files/styles/block_teaser_image/public/img/logos-simbolos/logo_cercanias_color_982x550.png',
                              scaledSize: new google.maps.Size(45,33)
                            },
                            map: map,
                            animation: google.maps.Animation.DROP
                          });

                          marker.addListener('click', function() {
                            infowindow.open(map, marker);
                          });
                          markers.push(marker);
                        });
                      }

                      function dropSpecificCercanias(line){
                        clearMarkers();
                        transitLayer.setMap(map);

                        dataCercanias.forEach(function(stat){
                          var contentString = '<center><h5 id="firstHeading" class="firstHeading">' + stat.nombre + '</h5>\n' + 
                            '<h6>Direccion: ' + stat.direccion + '</h6>' + 
                            '</br>' + 
                            '<h6>Lineas</h6>\n' +
                            '<p>' + stat.lineas + '</center></p>' + 
                            '<h6>Tarifa</h6>\n' + 
                            '<p>' + stat.tarifa + '</p>';

                            var infowindow = new google.maps.InfoWindow({
                              content : contentString
                            });

                          if(stat.lineas.includes(line)){
                            var marker = new google.maps.Marker({
                              position: new google.maps.LatLng(stat.lat, stat.lon),
                              icon: {
                                url: 'http://www.comunidad.madrid/sites/default/files/styles/block_teaser_image/public/img/logos-simbolos/logo_cercanias_color_982x550.png',
                                scaledSize: new google.maps.Size(45,33)
                              },
                              map: map,
                              animation: google.maps.Animation.DROP
                            });
                            marker.addListener('click', function() {
                              infowindow.open(map, marker);
                            });

                            markers.push(marker);
                          }
                        });
                      }

                      function dropBicimad() {
                        clearMarkers();
                        
                        dataBicimad.forEach(function(statBici){
                          var operativoState;
                          var stateImageUrl;

                          if(statBici.operativo == 'Si'){
                            operativoState = 'Operativa';
                            stateImageUrl = 'assets/img/icons/bicimadIconAvailable.png';
                          } else {
                            operativoState = 'No Operativa';
                            stateImageUrl = 'assets/img/icons/bicimadIconUnavailable.png';
                          }

                          var contentString = '<h5 id="firstHeading" class="firstHeading">' + statBici.nombre + '</h5>\n' + 
                            '<h6>Direccion: ' + statBici.direccion + '</h6>' + 
                            '</br>' + 
                            '<p>Bicis disponibles: ' + statBici.ancladas + '</p>' +
                            '</br>' + 
                            '<h6>' + operativoState + '</h6>';

                          var infowindow = new google.maps.InfoWindow({
                            content : contentString
                          });
                          
                          var marker = new google.maps.Marker({
                            position: new google.maps.LatLng(statBici.lat, statBici.lon),
                            icon: {
                              url: stateImageUrl,
                              scaledSize: new google.maps.Size(50,50)
                            },
                            map: map,
                            animation: google.maps.Animation.DROP
                          });

                          marker.addListener('click', function() {
                            infowindow.open(map, marker);
                          });
                          markers.push(marker);
                        });
                      }

                      function showTraffic(){
                        clearMarkers();
                        
                        trafficLayer.setMap(map);
                      }

                      function clearMarkers() {
                        transitLayer.setMap(null);
                        trafficLayer.setMap(null);
                        setMapOnAll(null);
                        markers = [];
                      }

                      function setMapOnAll(map) {
                        for (var i = 0; i < markers.length; i++) {
                          markers[i].setMap(map);
                        }
                      }


                  script(async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCQXpPnTkWE4KUpN8VjQ-uZ1jhsawzA59Q&callback=initMap")


        .container-fluid
          .row
            //Aeropuerto
            .col-lg-5.py-3
              +aeropuertoDashCard

            .col-lg-4.col-md-5.py-3
              +tiempoDashCard

            .col-md-6.col-lg-3.py-3
              +conversorMonedaDashCard

            .col-md-12.col-lg-8.col-sm-10.py-3
              +metroDashCard
              
            .col-lg-8.col-xs-12.py-3
              +googleMapDashCard
                        
                    
                      
                  
      // ===============================================
      // Pie de pagina
      // ===============================================
      footer
        
// ===============================================
// fin del contenido
// ===============================================
// ===============================================
// JavaScripts
// ===============================================
script(src='assets/js/jquery.min.js')
script(src='assets/js/popper.min.js')
script(src='assets/js/bootstrap.js')
script(src='assets/js/plugins.js')
script(src='assets/lib/stickyfilljs/stickyfill.min.js')
script(src='assets/lib/sticky-kit/sticky-kit.min.js')
script(src='assets/lib/chart.js/Chart.min.js')
script(src='assets/lib/jqvmap/jquery.vmap.js')
script(src='assets/lib/jqvmap/maps/jquery.vmap.world.js' charset='utf-8')
script(src='assets/lib/jqvmap/maps/jquery.vmap.usa.js' charset='utf-8')
script(src='assets/js/theme.js') 
script(src='//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js')
script(src='//cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js')
script(src='//cdn.datatables.net/responsive/2.2.3/js/dataTables.responsive.min.js')
script(src='//cdn.datatables.net/responsive/2.2.3/js/responsive.bootstrap4.js')


//Dropdown divisa origen
script(type='text/javascript').
  function dropdownCurrencySelector(elemID){
    var elem = document.getElementById(elemID);
    document.getElementById('currencyTypeText').innerHTML = elemID;
  }

script(type='text/javascript').
  function convertToEur() {
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
         if (this.readyState == 4 && this.status == 200) {
             //alert(this.responseText);
         }
    };
    xhttp.open("GET", "https://api.exchangeratesapi.io/latest?base=EUR", false);
    xhttp.send();
    
    var originCurr = document.getElementById('currencyTypeText').innerHTML
    var quantity = parseInt(document.getElementById('conversionQuantity').value, 10);
    var rawJson = JSON.parse(xhttp.responseText);

    var originRate = rawJson.rates[originCurr];

    var result = quantity / originRate;

    document.getElementById('readonlyCurrency').value = result;

  }
